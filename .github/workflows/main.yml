name: Daily Web Scraping

on:
  schedule:
    - cron: '0 0 * * *'  # Runs every day at midnight UTC
  workflow_dispatch:  # Allows manual triggering

jobs:
  scrape:
    runs-on: ubuntu-latest

    steps:
      # Check out the repository code
      - name: Checkout code
        uses: actions/checkout@v4

      # Set up Python
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'  # Adjust if you need a different version

      # Install Chrome and dependencies
      - name: Install Chrome and dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y google-chrome-stable unzip jq

      # Get Chrome version
      - name: Get Chrome version
        run: |
          CHROME_VERSION=$(google-chrome --version | grep -oE '[0-9]+\.[0-9]+\.[0-9]+')
          echo "CHROME_VERSION=$CHROME_VERSION" >> $GITHUB_ENV

      # Install ChromeDriver
      - name: Install ChromeDriver
        run: |
          CHROMEDRIVER_VERSION=$(curl -sS "https://googlechromelabs.github.io/chrome-for-testing/last-known-good-versions-with-downloads.json" | jq -r ".channels.Stable.version")
          echo "Instalando ChromeDriver versÃ£o $CHROMEDRIVER_VERSION"
          wget -q "https://storage.googleapis.com/chrome-for-testing-public/$CHROMEDRIVER_VERSION/linux64/chromedriver-linux64.zip"
          unzip chromedriver-linux64.zip
          sudo mv chromedriver-linux64/chromedriver /usr/bin/chromedriver
          sudo chmod +x /usr/bin/chromedriver

      # Install Python dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests beautifulsoup4 firebase-admin selenium

      # # Set up Firebase credentials
      # - name: Set up Firebase credentials
      #   env:
      #     FIREBASE_CREDENTIALS: ${{ secrets.FIREBASE_CREDENTIALS }}
      #   run: |
      #     echo "$FIREBASE_CREDENTIALS" > firebase_credentials.json

      # # Download Firebase credentials from URL
      # - name: Download Firebase credentials
      #   env:
      #     FIREBASE_CREDENTIALS_URL: ${{ secrets.FIREBASE_CREDENTIALS }}
      #   run: |
      #     mkdir -p ./database
      #     curl -s -f -o ./database/servicos-ufcat-app-firebase-adminsdk-wf4o4-7becca3684.json "$FIREBASE_CREDENTIALS_URL"
      #     if [ $? -ne 0 ]; then
      #       echo "Error: Failed to download Firebase credentials from URL"
      #       exit 1
      #     fi
      #     if [ ! -s ./database/servicos-ufcat-app-firebase-adminsdk-wf4o4-7becca3684.json ]; then
      #       echo "Error: Downloaded Firebase credentials file is empty"
      #       exit 1
      #     fi
      #     echo "Firebase credentials downloaded successfully (size: $(stat -c %s ./database/servicos-ufcat-app-firebase-adminsdk-wf4o4-7becca3684.json) bytes)"

      # # Validate Firebase credentials
      # - name: Validate Firebase credentials
      #   run: |
      #     python -c "import json; json.load(open('./database/servicos-ufcat-app-firebase-adminsdk-wf4o4-7becca3684.json')); print('JSON is valid')"
      #     if [ $? -ne 0 ]; then
      #       echo "Error: Firebase credentials file is not valid JSON"
      #       exit 1
      #     fi
      #     echo "Firebase credentials file is valid JSON"

      - name: Set up Firebase credentials
        env:
          FIREBASE_CREDENTIALS: ${{ vars.FIREBASE_CREDENTIALS }}
        run: |
          if [ -z "$FIREBASE_CREDENTIALS" ]; then
            echo "Error: FIREBASE_CREDENTIALS is empty. Please configure the secret in GitHub Actions."
            exit 1
          fi
          curl -s "$FIREBASE_CREDENTIALS" -o firebase_credentials.json
          if [ ! -s firebase_credentials.json ]; then
            echo "Error: Failed to fetch Firebase credentials or file is empty"
            exit 1
          fi
          # Validate JSON
          python -c "import json; json.load(open('firebase_credentials.json')); print('Firebase credentials JSON is valid')"
          echo "Firebase credentials saved successfully"

      # Run the scraping script
      - name: Run scraping script
        run: python main.py

      # Optional: Clean up credentials file
      - name: Clean up
        if: always()
        run: rm -f firebase_credentials.json
