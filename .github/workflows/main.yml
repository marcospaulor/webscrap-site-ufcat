name: Daily Web Scraping

on:
  schedule:
    - cron: '0 3 * * *' # Meia-noite BRT (3:00 UTC)
  workflow_dispatch:

jobs:
  scrape:
    runs-on: ubuntu-latest

    steps:
      # Faz checkout do código do repositório
      - name: Checkout repository
        uses: actions/checkout@v4

      # Configura o ambiente Python
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      # Instala o Chrome e dependências necessárias
      - name: Install Chrome and dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y google-chrome-stable unzip jq

      # Obtém a versão do Chrome instalada
      - name: Get Chrome version
        run: |
          CHROME_VERSION=$(google-chrome --version | grep -oE '[0-9]+\.[0-9]+\.[0-9]+')
          echo "CHROME_VERSION=$CHROME_VERSION" >> $GITHUB_ENV

      # Baixa o ChromeDriver compatível com a versão do Chrome
      - name: Install ChromeDriver
        run: |
          CHROMEDRIVER_VERSION=$(curl -sS "https://googlechromelabs.github.io/chrome-for-testing/last-known-good-versions-with-downloads.json" | jq -r ".channels.Stable.version")
          echo "Instalando ChromeDriver versão $CHROMEDRIVER_VERSION"
          wget -q "https://storage.googleapis.com/chrome-for-testing-public/$CHROMEDRIVER_VERSION/linux64/chromedriver-linux64.zip"
          unzip chromedriver-linux64.zip
          sudo mv chromedriver-linux64/chromedriver /usr/bin/chromedriver
          sudo chmod +x /usr/bin/chromedriver

      # Instala dependências do Python
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Verifica se o segredo FIREBASE_CREDENTIALS está definido
      - name: Check Firebase credentials secret
        env:
          FIREBASE_CREDENTIALS: ${{ secrets.FIREBASE_CREDENTIALS }}
        run: |
          if [ -z "$FIREBASE_CREDENTIALS" ]; then
            echo "Error: FIREBASE_CREDENTIALS is empty. Please configure the secret in GitHub Actions."
            exit 1
          fi
          echo "FIREBASE_CREDENTIALS secret is present"
          # Depuração: exibe o comprimento da string do segredo (sem revelar o conteúdo)
          echo "Length of FIREBASE_CREDENTIALS: ${#FIREBASE_CREDENTIALS}"

      # Cria o arquivo de credenciais do Firebase
      - name: Create Firebase credentials file
        env:
          FIREBASE_CREDENTIALS: ${{ secrets.FIREBASE_CREDENTIALS }}
        run: |
          mkdir -p ./database
          echo "$FIREBASE_CREDENTIALS" | base64 -d > ./database/servicos-ufcat-app-firebase-adminsdk-wf4o4-7becca3684.json

      # Valida o arquivo de credenciais
      - name: Validate Firebase credentials
        run: |
          if [ -s ./database/servicos-ufcat-app-firebase-adminsdk-wf4o4-7becca3684.json ]; then
            python -c "import json; json.load(open('./database/servicos-ufcat-app-firebase-adminsdk-wf4o4-7becca3684.json'))"
            echo "Firebase credentials file is valid JSON"
          else
            echo "Error: Firebase credentials file is empty"
            exit 1
          fi

      # Executa o script Python
      - name: Run Python script
        run: |
          python main.py

      # Debug: Verifica versões instaladas
      - name: Debug Chrome and ChromeDriver versions
        run: |
          google-chrome --version
          chromedriver --version
          which chromedriver
